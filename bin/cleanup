#!/bin/bash
usage() {
cat <<'EOF'
Usage: cleanup <OPTION> <local | origin>
Will automatically skip stable and master branches.
OPTIONS:
     -h, --help      Display usage.
     -p, --preview   Preview what branches to remove.
     -c, --clean     Deletes those branches.
     local           Local merged branches.
     origin          Branches on your origin.
EOF
}

if [ "$1" = --help ] || [ "$1" = -h ] || [ $# -ne 2 ]; then
   usage >&2
   exit
fi

case "$2" in
   'local')
   if [ "$1" = --preview ] || [ "$1" = -p ]; then
      echo "Would delete the following:"
      git branch --merged master | 
      grep -v master | 
      grep -v stable
   fi

   if [ "$1" = --clean ] || [ "$1" = -c ]; then
      git branch --merged master | 
      grep -v master | 
      grep -v stable |
      xargs git branch -d
   fi
   ;;
   'origin')
   if [ "$1" = --preview ] || [ "$1" = -p ]; then
      echo "Would delete the following:"
      git remote prune -n origin | 
      grep -v master |
      grep -v stable |
      sed -e "s/ \* \[would prune\] origin\///"
   fi

   if [ "$1" = --clean ] || [ "$1" = -c ]; then
      git remote prune origin
      # list branches merged into master
      git branch -r --merged origin/master | 
      grep -v master | 
      grep -v stable |
      sed -n "s| origin/|:|p" | # use remote branch delete syntax
                                # and only include origin branches
      xargs git git push origin
   fi
   ;;
esac
